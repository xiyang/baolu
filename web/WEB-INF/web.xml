<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee   http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<description>
		
	</description>
	<display-name>baolu</display-name>
	
	<context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>baolu</param-value>
    </context-param>
	
	<context-param>  
		<param-name>jmesaMessagesLocation</param-name>
		<param-value>config/jmesa</param-value>
	</context-param>

	<!-- context configuration locations for Spring XML files -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/*.xml</param-value>
	</context-param>
	<!--
		Location of the Log4J config file, for initialization and refresh checks.
		Applied by Log4jConfigListener.
	-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:config/log4j.properties</param-value>
	</context-param>
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
 	
 	<filter>
        <filter-name>CharFilter</filter-name>
        <filter-class>com.lsxyz.baolu.core.filter.CharsetFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CharFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
<!-- 
		- Loads the root application context of this web app at startup,
		- by default from "/WEB-INF/applicationContext.xml".
		- Note that you need to fall back to Spring's ContextLoaderServlet for
		- J2EE servers that do not follow the Servlet 2.4 initialization order.
		-
		- Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
		- to access it anywhere in the web application, outside of the framework.
		-
		- The root context is the parent of all servlet-specific contexts.
		- This means that its beans are automatically available in these child contexts,
		- both for getBean(name) calls and (external) bean references.
	-->
	<listener> 
	   <listener-class> 
			org.springframework.web.util.Log4jConfigListener 
	   </listener-class> 
	</listener>
	
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
    
    <listener>
        <listener-class>com.lsxyz.baolu.core.listener.ServletContextLoaderListener</listener-class>
    </listener>
    
	<!--
		- Servlet that dispatches request to registered handlers (Controller implementations).
		- Has its own application context, by default defined in "{servlet-name}-servlet.xml",
		- i.e. "petclinic-servlet.xml".
		-
		- A web app can contain any number of such servlets.
		- Note that this web app has a shared root application context, serving as parent
		- of all DispatcherServlet contexts.
	-->
    
	<servlet-mapping>  
	    <servlet-name>default</servlet-name>  
	    <url-pattern>/static/*</url-pattern>  
	</servlet-mapping>  
	
	<!-- URL Rest Filter -->
	<filter>  
    <filter-name>UrlRewriteFilter</filter-name>  
    <filter-class>com.lsxyz.baolu.core.web.action.RestUrlRewriteFilter</filter-class>
    <init-param>  
            <param-name>confReloadCheckInterval</param-name>  
            <param-value>60</param-value>  
        </init-param>  
    <init-param>  
                <param-name>logLevel</param-name>  
                <param-value>DEBUG</param-value>  
   	</init-param>        
	</filter>  
	<filter-mapping>  
	    <filter-name>UrlRewriteFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>  
	<!-- Url Rest Filter end -->
	  
	<servlet>  
	    <servlet-name>action</servlet-name>  
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
	    <load-on-startup>1</load-on-startup>  
	</servlet> 
	
	<servlet-mapping>  
	    <servlet-name>action</servlet-name>  
	    <url-pattern>/</url-pattern>  
	</servlet-mapping>  
	
	<servlet>
    	<servlet-name>worksheet</servlet-name>
    	<servlet-class>org.jmesa.worksheet.servlet.WorksheetServlet</servlet-class>
	</servlet>
	<servlet-mapping>
    	<servlet-name>worksheet</servlet-name>
    	<url-pattern>*.wrk</url-pattern>
	</servlet-mapping>  
	  
	<filter>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>  
	</filter>  
	  
	<filter-mapping>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <servlet-name>action</servlet-name>  
	</filter-mapping>  
	
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/error</location>
    </error-page>
    
</web-app>
